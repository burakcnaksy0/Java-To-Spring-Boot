package StreamApiExample;

import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import java.util.stream.Collectors;

public class Main {

	public static void main(String[] args) {
		List<Book> books = new ArrayList<>();
		books.add(new Book("Sefiller", "Victor Hugo", 1200, 150.0));
		books.add(new Book("KÃ¼rk Mantolu Madonna", "Sabahattin Ali", 160, 50.0));
		books.add(new Book("SuÃ§ ve Ceza", "Dostoyevski", 700, 120.0));
		books.add(new Book("Beyaz DiÅŸ", "Jack London", 180, 45.0));
		books.add(new Book("SimyacÄ±", "Paulo Coelho", 210, 60.0));

		// 1. tÃ¼m kitaplarÄ± yazdÄ±r.
		System.out.println("ğŸ“š TÃ¼m Kitaplar:");
		books.stream()
		.forEach(book -> System.out.println(book.toString()));
	
		// 2. Sayfa sayÄ±sÄ± 200'den fazla olanlarÄ± filtrele
		System.out.println("\n 200 sayfadan fazla kitaplar:");
		
		/*
		 books.stream()
            .filter(book -> book.getPageCount() > 200)
            .forEach(System.out::println);
		 */
		List<Book> filteredList =  books.stream()
		.filter(book -> book.getPageCount()>200)
		.collect(Collectors.toList());
		
		filteredList.forEach(book -> System.out.println(book.toString()));
		
		// 3. TÃ¼m kitaplarÄ±n sadece isimlerini bÃ¼yÃ¼k harf olarak yazdÄ±r
		System.out.println("\n Kitap isimleri (bÃ¼yÃ¼k harf):");
		books.stream()
		.map(book -> book.getTitle().toUpperCase())
		.forEach(System.out::println);
		
		// 4. FiyatÄ± 50'den kÃ¼Ã§Ã¼k kitaplarÄ±n sayÄ±sÄ±nÄ± bul
		long count = books.stream()
		.filter(book -> book.getPrice()<50)
		.count();
		
		System.out.println("\n 50 TL'den ucuz kitap sayÄ±sÄ±: " + count);
		books.stream()
		.filter(book -> book.getPrice()<50)
		.forEach(book -> System.out.println(book.toString()));
		
		// 5. KitaplarÄ± sayfa sayÄ±sÄ±na gÃ¶re sÄ±rala
		// burda sÄ±ralama yaparken neye gÃ¶re sÄ±ralama yapacaÄŸÄ±nÄ± belirlemek iÃ§in
		// ya class Ä±n iÃ§inde implements Comparable<ClassName> uygulayÄ±p aÅŸaÄŸÄ±daki iÅŸlemleri yapÄ±caksÄ±n
		System.out.println("\n Sayfa sayÄ±sÄ±na gÃ¶re sÄ±ralÄ±:");
		books.stream()
		.sorted()
		.forEach(book -> System.out.println(book.toString()));
		
		System.out.println();
		
		// ya da direkt olarak sorted metodu iÃ§inde belirteceksin 
		books.stream()
	    .sorted(Comparator.comparingInt(Book::getPageCount))
	    .forEach(System.out::println);
		
		// 6. kitaplarÄ± alfabetik olarak sÄ±rala
		System.out.println("\n Alfabetik sÄ±rasÄ±na gÃ¶re sÄ±ralÄ±:");
		books.stream()
		.sorted(Comparator.comparing(book -> book.getTitle().toLowerCase()))
		.forEach(System.out :: println);
	
		// 7. KitaplarÄ± sadece baÅŸlÄ±k olarak liste olarak topla
		List<String> bookTitleList =  books.stream()
		.map(Book :: getTitle)
		.collect(Collectors.toList());
		
		System.out.println("\n Kitap baÅŸlÄ±klarÄ± listesi:");
		bookTitleList.forEach(book -> System.out.println(book.toString()));
		
		// 8. listedeki tÃ¼m kitaplarÄ±n fiyatÄ±nÄ± bulma.
		System.out.println("kitaplarÄ±n fiyatlarÄ± : ");
		books.stream()
		.map(Book :: getPrice)
		.forEach(System.out :: println);
		
		double booksPrice = books.stream()
				.mapToDouble(Book :: getPrice)
				.sum();
		System.out.println("kitaplarÄ±n toplam fiyatÄ± : "+ booksPrice);
		
		// 9. listedeki tÃ¼m kitaplarÄ±n sayfa sayÄ±sÄ±nÄ± bulma.
		System.out.println("kitaplarÄ±n sayfa sayÄ±larÄ± : ");
		books.stream()
		.map(Book :: getPageCount)
		.forEach(System.out :: println);
		
		
		int booksPageNumber = books.stream()
		.mapToInt(Book :: getPageCount)
		.sum();
		
		System.out.println("kitaplarÄ±n toplam sayfa sayÄ±sÄ± : " +booksPageNumber);
		
		// 10. listedeki tÃ¼m kitaplarÄ±n ortalama fiyatÄ±nÄ± bulma.
		System.out.println("tÃ¼m kitaplarÄ±n ortalama fiyatÄ± : ");
		double sumPrice = books.stream()
				.mapToDouble(Book :: getPrice)
				.sum();
		System.out.println("toplam fiyat : " +sumPrice);
		
		double count1 = (double)books.size();
		
		double averagePrice = sumPrice / count1;
		
		System.out.println(averagePrice);
	
	
	
	
	
	
	}

}

















